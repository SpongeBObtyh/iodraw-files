{"root":{"data":{"id":"d66zksi8m5c0","created":1733728828512,"text":"java 锁的分类"},"children":[{"data":{"id":"d66zl3pyqa80","created":1733728852924,"text":"公平锁和非公平锁","layout_mind_offset":{"x":66,"y":25},"note":"大概意思是获取锁是否遵循先来后到的原则"},"children":[]},{"data":{"id":"d66zsaawx7k0","created":1733729415800,"text":"可重入锁和非重入锁","layout_mind_offset":{"x":69,"y":40},"note":"可重入锁：方法1调用方法2的时候，如果方法1使用了可重入锁，那么在调用方法2的时候不需要再次等待方法1锁的释放和获取。\n非可重入锁：方法1调用方法2，在方法2执行的时候会等待方法1所拥有锁的释放后再次获取。"},"children":[{"data":{"id":"d68n45wy3pk0","created":1733896792103,"text":"可重入锁","note":"ReentrantLock：\nsynchronized："},"children":[]},{"data":{"id":"d68n4ugwrm00","created":1733896845553,"text":"非可重入锁","note":"NonReentrantLock:"},"children":[]}]},{"data":{"id":"d66zsdb73zk0","created":1733729422348,"text":"读写锁和排他锁","layout_mind_offset":{"x":665,"y":-95},"note":"pai锁在同一时刻只允许一个线程进行访问"},"children":[]}]},"template":"default","theme":"fresh-blue","version":"1.4.43"}